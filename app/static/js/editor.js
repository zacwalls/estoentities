const socket=io(),editor=document.getElementById("editor"),gutters=document.getElementsByClassName("gutter"),output=document.getElementById("output"),copyBtn=document.getElementById("copy"),copyAlert=document.getElementById("copy-alert");copyBtn.addEventListener("click",(()=>(copyAlert.style.opacity="1",setTimeout((()=>{copyAlert.style.opacity="0"}),1500),navigator.clipboard.writeText(output.value))));const getCols=t=>{const e=window.getComputedStyle(t,null),o=parseFloat(e.getPropertyValue("font-size"))+"px",n=(getCols.canvas||(getCols.canvas=document.createElement("canvas"))).getContext("2d");let r=t.offsetWidth;n.font=o+" "+t.style.fontFamily,r-=parseInt(e.getPropertyValue("border-left-width")),r-=parseInt(e.getPropertyValue("border-right-width")),r-=parseInt(e.getPropertyValue("padding-right")),r-=parseInt(e.getPropertyValue("padding-left"));const a=r/n.measureText("a").width;return Math.floor(a/1.72)};editor.cols=getCols(editor);const updateRows=(t,e,o)=>{let n=null!=t.value.match(/\n/g)?t.value.match(/\n/g).length+1:1;for(gutter of(t.value.length>t.cols*n-20&&8!=o.keyCode&&(t.value=t.value+"\n"),t.rows=n,e)){gutter.innerHTML="";for(let e=0;e<t.rows;e++)gutter.insertAdjacentHTML("beforeend",`<span>${e+1}</span>`)}return!0};socket.on("connect",(()=>{editor.addEventListener("keyup",(t=>{updateRows(editor,gutters,t),socket.emit("update",{text:editor.value}),socket.on("updated",(t=>{output.value=t.output}))}))}));